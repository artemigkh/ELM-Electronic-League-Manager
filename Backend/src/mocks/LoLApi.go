// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import lolApi "Server/lolApi"
import mock "github.com/stretchr/testify/mock"

// LoLApi is an autogenerated mock type for the LoLApi type
type LoLApi struct {
	mock.Mock
}

// GetMatchStats provides a mock function with given fields: id
func (_m *LoLApi) GetMatchStats(id string) (*lolApi.MatchInformation, error) {
	ret := _m.Called(id)

	var r0 *lolApi.MatchInformation
	if rf, ok := ret.Get(0).(func(string) *lolApi.MatchInformation); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*lolApi.MatchInformation)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSummonerId provides a mock function with given fields: name
func (_m *LoLApi) GetSummonerId(name string) (string, error) {
	ret := _m.Called(name)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(name)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSummonerInformation provides a mock function with given fields: ids
func (_m *LoLApi) GetSummonerInformation(ids []string) map[string]*lolApi.SummonerInformation {
	ret := _m.Called(ids)

	var r0 map[string]*lolApi.SummonerInformation
	if rf, ok := ret.Get(0).(func([]string) map[string]*lolApi.SummonerInformation); ok {
		r0 = rf(ids)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]*lolApi.SummonerInformation)
		}
	}

	return r0
}
